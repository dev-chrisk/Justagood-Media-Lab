import{d as O,r as m,c as v,q as f}from"./index-DfPC7CVf.js";class j{constructor(){this.isConnected={value:!1},this.listeners=new Map,this.pollingInterval=null,this.lastUpdate=null,this.pollingIntervalMs=2e4}connect(){if(this.pollingInterval)return;const s=localStorage.getItem("authToken"),c=localStorage.getItem("currentUser");if(!s||!c){console.log("Skipping realtime connection - user not authenticated");return}this.isConnected.value=!0,this.lastUpdate=new Date,this.pollingInterval=setInterval(()=>{this.checkForUpdates()},this.pollingIntervalMs)}async checkForUpdates(){try{const s=localStorage.getItem("authToken"),c=localStorage.getItem("currentUser");if(!s||!c)return;const l=await fetch("https://teabubble.attrebi.ch/api/media",{headers:{Authorization:`Bearer ${s}`,"Content-Type":"application/json"}});if(!l.ok){if(l.status===401){this.disconnect();return}throw new Error(`HTTP error! status: ${l.status}`)}const g=await l.json();g&&g.length>0&&this.listeners.forEach((i,p)=>{try{i({type:"media_updated",items:g,count:g.length,timestamp:new Date().toISOString()})}catch(u){console.error(`Error in listener ${p}:`,u)}}),this.lastUpdate=new Date}catch{}}addListener(s,c){this.listeners.set(s,c)}removeListener(s){this.listeners.delete(s)}disconnect(){this.pollingInterval&&(clearInterval(this.pollingInterval),this.pollingInterval=null),this.isConnected.value=!1}destroy(){this.disconnect(),this.listeners.clear()}}const I=new j,J=O("media",()=>{const o=m(p()),s=m("game"),c=m(""),l=m([]),g=m(!1),i=m(null);function p(){try{const e=localStorage.getItem("authToken"),t=localStorage.getItem("currentUser");if(!e||!t){const a=localStorage.getItem("mediaData");return a?JSON.parse(a):[]}return[]}catch(e){return console.error("Failed to load media from storage:",e),[]}}function u(){try{const e=localStorage.getItem("authToken"),t=localStorage.getItem("currentUser");(!e||!t)&&localStorage.setItem("mediaData",JSON.stringify(o.value))}catch(e){console.error("Failed to save media to storage:",e)}}const S=v(()=>o.value.length),k=v(()=>{const e={};return o.value.forEach(t=>{const a=t.category||"unknown";e[a]=(e[a]||0)+1}),e}),M=v(()=>{let e=[...o.value];if(s.value&&s.value!=="all"&&(e=e.filter(t=>s.value==="watchlist"?t.category==="watchlist"||t.isNew===!0:t.category===s.value)),c.value){const t=c.value.toLowerCase();e=e.filter(a=>{var r,n,d,y;return((r=a.title)==null?void 0:r.toLowerCase().includes(t))||((n=a.description)==null?void 0:n.toLowerCase().includes(t))||((d=a.genre)==null?void 0:d.toLowerCase().includes(t))||((y=a.platforms)==null?void 0:y.toLowerCase().includes(t))})}return l.value.forEach(t=>{t.type==="platform"?e=e.filter(a=>{var r;return(r=a.platforms)==null?void 0:r.toLowerCase().includes(t.value.toLowerCase())}):t.type==="genre"?e=e.filter(a=>{var r;return(r=a.genre)==null?void 0:r.toLowerCase().includes(t.value.toLowerCase())}):t.type==="airing"&&(t.value==="airing"?e=e.filter(a=>a.isAiring===!0):t.value==="finished"&&(e=e.filter(a=>a.isAiring===!1||a.isAiring===null)))}),e}),E=v(()=>{const e=new Set;return o.value.forEach(t=>{t.platforms&&t.platforms.split(/[,;|&]/).map(r=>r.trim()).filter(r=>r.length>0).forEach(r=>e.add(r))}),Array.from(e).sort()}),U=v(()=>{const e=new Set;return o.value.forEach(t=>{t.genre&&t.genre.split(/[,;|&]/).map(r=>r.trim()).filter(r=>r.length>0).forEach(r=>e.add(r))}),Array.from(e).sort()});async function h(){var e,t;g.value=!0,i.value=null;try{const a=localStorage.getItem("authToken"),r=localStorage.getItem("currentUser");if(a&&r)try{const n=await f.getMedia();o.value=n||[]}catch(n){console.warn("API load failed for logged in user:",n),o.value=[]}else{const n=p();if(n.length>0)o.value=n;else{const d=await f.getMedia();o.value=d||[],u()}}}catch(a){i.value=((t=(e=a.response)==null?void 0:e.data)==null?void 0:t.message)||a.message||"Failed to load media data",console.error("Failed to load media:",a)}finally{g.value=!1}}function F(e){s.value=e}function L(e){c.value=e}function C(e){l.value.some(a=>a.type===e.type&&a.value===e.value)||l.value.push(e)}function T(e){l.value=l.value.filter(t=>!(t.type===e.type&&t.value===e.value))}function A(){l.value=[]}async function x(e){try{const t=localStorage.getItem("authToken"),a=localStorage.getItem("currentUser");if(t&&a)try{const r=await f.addMediaItem(e);return await h(),r}catch(r){throw console.error("API save failed for logged in user:",r),r}else{const r={id:Date.now(),...e,__order:o.value.length};return o.value.push(r),u(),r}}catch(t){throw i.value=t.message||"Failed to add media item",t}}async function b(e,t){try{const a=localStorage.getItem("authToken"),r=localStorage.getItem("currentUser");if(a&&r)try{const n=await f.updateMediaItem(e,t);return await h(),n}catch(n){throw console.error("API update failed for logged in user:",n),n}else{const n=o.value.findIndex(d=>d.id===e);if(n!==-1)return o.value[n]={...o.value[n],...t},u(),o.value[n];throw new Error("Media item not found")}}catch(a){throw i.value=a.message||"Failed to update media item",a}}async function D(e){try{const t=localStorage.getItem("authToken"),a=localStorage.getItem("currentUser");if(t&&a)try{return await f.deleteMediaItem(e),await h(),!0}catch(r){throw console.error("API delete failed for logged in user:",r),r}else{const r=o.value.findIndex(n=>n.id===e);if(r!==-1)return o.value.splice(r,1),u(),!0;throw new Error("Media item not found")}}catch(t){throw i.value=t.message||"Failed to delete media item",t}}async function P(e){try{const t=localStorage.getItem("authToken"),a=localStorage.getItem("currentUser");if(t&&a)try{const r=await f.batchAddMediaItems(e);return await h(),r}catch(r){throw console.error("API batch add failed for logged in user:",r),r}else{const r=e.map((n,d)=>({id:Date.now()+d,...n,__order:o.value.length+d}));return o.value.push(...r),u(),{success:!0,stats:{created:r.length,failed:0,errors:[]}}}}catch(t){throw i.value=t.message||"Failed to add media items",t}}async function _(e){try{const t=localStorage.getItem("authToken"),a=localStorage.getItem("currentUser");if(t&&a)try{return await f.batchDeleteMediaItems(e),await h(),!0}catch(r){throw console.error("API batch delete failed for logged in user:",r),r}else return o.value=o.value.filter(r=>!e.includes(r.id)),u(),!0}catch(t){throw i.value=t.message||"Failed to delete media items",t}}async function z(){try{const e=localStorage.getItem("authToken"),t=localStorage.getItem("currentUser");e&&t?await f.saveMedia(o.value):u()}catch(e){console.error("Failed to save media:",e)}}function w(){i.value=null}function R(e){if(console.log("Processing real-time update:",e),e.type==="media_updated"&&e.items)e.items.forEach(t=>{const a=o.value.findIndex(r=>r.id===t.id);a!==-1?o.value[a]={...o.value[a],...t}:o.value.push(t)});else if(e.action==="created"||e.action==="updated"){const t=e.item,a=o.value.findIndex(r=>r.id===t.id);a!==-1?o.value[a]={...o.value[a],...t}:o.value.push(t)}else if(e.action==="deleted"){const t=o.value.findIndex(a=>a.id===e.id);t!==-1&&o.value.splice(t,1)}u()}function $(){const e=localStorage.getItem("authToken"),t=localStorage.getItem("currentUser");if(!e||!t){console.log("Skipping realtime initialization - user not authenticated");return}try{I.addListener("media-store",R),I.connect()}catch(a){console.error("Failed to initialize realtime updates:",a)}}function N(){I.removeListener("media-store")}return{mediaData:o,currentCategory:s,searchQuery:c,activeFilters:l,loading:g,error:i,totalItems:S,categoryCounts:k,filteredMedia:M,platforms:E,genres:U,loadMedia:h,setCategory:F,setSearchQuery:L,addFilter:C,removeFilter:T,clearFilters:A,addMediaItem:x,updateMediaItem:b,deleteMediaItem:D,batchAddMediaItems:P,batchDeleteMediaItems:_,saveMedia:z,clearError:w,initializeRealtimeUpdates:$,cleanupRealtimeUpdates:N}});export{J as u};
