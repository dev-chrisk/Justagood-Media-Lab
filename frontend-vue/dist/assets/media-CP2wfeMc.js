import{r as m,d as j,c as v,m as u}from"./index-CvWOnAMC.js";class z{constructor(){this.isConnected=m(!1),this.listeners=new Map,this.pollingInterval=null,this.lastUpdate=null,this.pollingIntervalMs=2e3}connect(){this.pollingInterval||(console.log("Starting polling for real-time updates"),this.isConnected.value=!0,this.lastUpdate=new Date,this.pollingInterval=setInterval(()=>{this.checkForUpdates()},this.pollingIntervalMs))}async checkForUpdates(){try{const s=localStorage.getItem("authToken"),h=localStorage.getItem("currentUser");if(!s||!h)return;const l=await fetch(`http://127.0.0.1:8050/api/media?since=${this.lastUpdate.toISOString()}`,{headers:{Authorization:`Bearer ${s}`,"Content-Type":"application/json"}});if(!l.ok)throw new Error(`HTTP error! status: ${l.status}`);const d=await l.json();d&&d.length>0&&(console.log("Polling found updates:",d.length,"items"),this.listeners.forEach((i,p)=>{try{i({type:"media_updated",items:d,count:d.length,timestamp:new Date().toISOString()})}catch(c){console.error(`Error in listener ${p}:`,c)}})),this.lastUpdate=new Date}catch(s){console.error("Polling error:",s)}}addListener(s,h){this.listeners.set(s,h)}removeListener(s){this.listeners.delete(s)}disconnect(){this.pollingInterval&&(clearInterval(this.pollingInterval),this.pollingInterval=null),this.isConnected.value=!1}destroy(){this.disconnect(),this.listeners.clear()}}const w=new z,Q=j("media",()=>{const o=m(p()),s=m("game"),h=m(""),l=m([]),d=m(!1),i=m(null);function p(){try{const t=localStorage.getItem("authToken"),e=localStorage.getItem("currentUser");if(!t||!e){const a=localStorage.getItem("mediaData");return a?JSON.parse(a):[]}return[]}catch(t){return console.error("Failed to load media from storage:",t),[]}}function c(){try{const t=localStorage.getItem("authToken"),e=localStorage.getItem("currentUser");(!t||!e)&&localStorage.setItem("mediaData",JSON.stringify(o.value))}catch(t){console.error("Failed to save media to storage:",t)}}const k=v(()=>o.value.length),M=v(()=>{const t={};return o.value.forEach(e=>{const a=e.category||"unknown";t[a]=(t[a]||0)+1}),t}),F=v(()=>{let t=[...o.value];if(s.value&&s.value!=="all"&&(t=t.filter(e=>s.value==="watchlist"?e.category==="watchlist"||e.isNew===!0:e.category===s.value)),h.value){const e=h.value.toLowerCase();t=t.filter(a=>{var r,n,g,S;return((r=a.title)==null?void 0:r.toLowerCase().includes(e))||((n=a.description)==null?void 0:n.toLowerCase().includes(e))||((g=a.genre)==null?void 0:g.toLowerCase().includes(e))||((S=a.platforms)==null?void 0:S.toLowerCase().includes(e))})}return l.value.forEach(e=>{e.type==="platform"?t=t.filter(a=>{var r;return(r=a.platforms)==null?void 0:r.toLowerCase().includes(e.value.toLowerCase())}):e.type==="genre"&&(t=t.filter(a=>{var r;return(r=a.genre)==null?void 0:r.toLowerCase().includes(e.value.toLowerCase())}))}),t});async function f(){var t,e;d.value=!0,i.value=null;try{const a=localStorage.getItem("authToken"),r=localStorage.getItem("currentUser");if(a&&r)try{const n=await u.getMedia();o.value=n||[],await I()}catch(n){console.warn("API load failed for logged in user:",n),o.value=[]}else{const n=p();if(n.length>0)o.value=n;else{const g=await u.getMedia();o.value=g||[],c()}}}catch(a){i.value=((e=(t=a.response)==null?void 0:t.data)==null?void 0:e.message)||a.message||"Failed to load media data",console.error("Failed to load media:",a)}finally{d.value=!1}}async function I(){try{const t=localStorage.getItem("authToken"),e=localStorage.getItem("currentUser");if(!t||!e)return;const a=await u.checkDuplicates();a.success&&a.count>0&&(console.warn(`Found ${a.count} duplicate groups in media items`),window.dispatchEvent(new CustomEvent("duplicates-found",{detail:{count:a.count,duplicates:a.duplicates}})))}catch(t){console.error("Failed to check for duplicates:",t)}}async function y(t){try{const e=localStorage.getItem("authToken"),a=localStorage.getItem("currentUser");return!e||!a?null:await u.checkCategoryDuplicates(t)}catch(e){return console.error("Failed to check category duplicates:",e),null}}function U(t){s.value=t,s.value!=="all"&&y(t).then(e=>{e&&e.success&&e.count>0&&(console.warn(`Found ${e.count} duplicate groups in ${t} category`),window.dispatchEvent(new CustomEvent("category-duplicates-found",{detail:{category:t,count:e.count,duplicates:e.duplicates}})))})}function C(t){h.value=t}function E(t){l.value.some(a=>a.type===t.type&&a.value===t.value)||l.value.push(t)}function T(t){l.value=l.value.filter(e=>!(e.type===t.type&&e.value===t.value))}function x(){l.value=[]}async function D(t){try{const e=localStorage.getItem("authToken"),a=localStorage.getItem("currentUser");if(e&&a)try{const r=await u.addMediaItem(t);return await f(),r}catch(r){throw console.error("API save failed for logged in user:",r),r}else{const r={id:Date.now(),...t,__order:o.value.length};return o.value.push(r),c(),r}}catch(e){throw i.value=e.message||"Failed to add media item",e}}async function L(t,e){try{const a=localStorage.getItem("authToken"),r=localStorage.getItem("currentUser");if(a&&r)try{const n=await u.updateMediaItem(t,e);return await f(),n}catch(n){throw console.error("API update failed for logged in user:",n),n}else{const n=o.value.findIndex(g=>g.id===t);if(n!==-1)return o.value[n]={...o.value[n],...e},c(),o.value[n];throw new Error("Media item not found")}}catch(a){throw i.value=a.message||"Failed to update media item",a}}async function A(t){try{const e=localStorage.getItem("authToken"),a=localStorage.getItem("currentUser");if(e&&a)try{return await u.deleteMediaItem(t),await f(),!0}catch(r){throw console.error("API delete failed for logged in user:",r),r}else{const r=o.value.findIndex(n=>n.id===t);if(r!==-1)return o.value.splice(r,1),c(),!0;throw new Error("Media item not found")}}catch(e){throw i.value=e.message||"Failed to delete media item",e}}async function P(t){try{const e=localStorage.getItem("authToken"),a=localStorage.getItem("currentUser");if(e&&a)try{const r=await u.batchAddMediaItems(t);return await f(),r}catch(r){throw console.error("API batch add failed for logged in user:",r),r}else{const r=t.map((n,g)=>({id:Date.now()+g,...n,__order:o.value.length+g}));return o.value.push(...r),c(),{success:!0,stats:{created:r.length,failed:0,errors:[]}}}}catch(e){throw i.value=e.message||"Failed to add media items",e}}async function $(t){try{const e=localStorage.getItem("authToken"),a=localStorage.getItem("currentUser");if(e&&a)try{return await u.batchDeleteMediaItems(t),await f(),!0}catch(r){throw console.error("API batch delete failed for logged in user:",r),r}else return o.value=o.value.filter(r=>!t.includes(r.id)),c(),!0}catch(e){throw i.value=e.message||"Failed to delete media items",e}}async function b(){try{const t=localStorage.getItem("authToken"),e=localStorage.getItem("currentUser");t&&e?await u.saveMedia(o.value):c()}catch(t){console.error("Failed to save media:",t)}}function _(){i.value=null}function O(t){if(console.log("Processing real-time update:",t),t.type==="media_updated"&&t.items)t.items.forEach(e=>{const a=o.value.findIndex(r=>r.id===e.id);a!==-1?o.value[a]={...o.value[a],...e}:o.value.push(e)});else if(t.action==="created"||t.action==="updated"){const e=t.item,a=o.value.findIndex(r=>r.id===e.id);a!==-1?o.value[a]={...o.value[a],...e}:o.value.push(e)}else if(t.action==="deleted"){const e=o.value.findIndex(a=>a.id===t.id);e!==-1&&o.value.splice(e,1)}c()}function R(){w.addListener("media-store",O),w.connect()}function N(){w.removeListener("media-store")}return{mediaData:o,currentCategory:s,searchQuery:h,activeFilters:l,loading:d,error:i,totalItems:k,categoryCounts:M,filteredMedia:F,loadMedia:f,setCategory:U,setSearchQuery:C,addFilter:E,removeFilter:T,clearFilters:x,addMediaItem:D,updateMediaItem:L,deleteMediaItem:A,batchAddMediaItems:P,batchDeleteMediaItems:$,saveMedia:b,clearError:_,initializeRealtimeUpdates:R,cleanupRealtimeUpdates:N,checkForDuplicates:I,checkCategoryDuplicates:y}});export{w as r,Q as u};
