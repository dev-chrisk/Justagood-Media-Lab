import{d as O,r as I,c as y,m as v}from"./index-kIjFZtrz.js";class j{constructor(){this.isConnected={value:!1},this.listeners=new Map,this.pollingInterval=null,this.lastUpdate=null,this.pollingIntervalMs=2e3}connect(){if(this.pollingInterval)return;const c=localStorage.getItem("authToken"),h=localStorage.getItem("currentUser");if(!c||!h){console.log("Skipping realtime connection - user not authenticated");return}console.log("Starting polling for real-time updates"),this.isConnected.value=!0,this.lastUpdate=new Date,this.pollingInterval=setInterval(()=>{this.checkForUpdates()},this.pollingIntervalMs)}async checkForUpdates(){try{const c=localStorage.getItem("authToken"),h=localStorage.getItem("currentUser");if(!c||!h)return;const g=await fetch("http://127.0.0.1:8000/api/media",{headers:{Authorization:`Bearer ${c}`,"Content-Type":"application/json"}});if(!g.ok){if(g.status===401){this.disconnect();return}throw new Error(`HTTP error! status: ${g.status}`)}const m=await g.json();m&&m.length>0&&(console.log("Polling found updates:",m.length,"items"),this.listeners.forEach((l,w)=>{try{l({type:"media_updated",items:m,count:m.length,timestamp:new Date().toISOString()})}catch(f){console.error(`Error in listener ${w}:`,f)}})),this.lastUpdate=new Date}catch(c){console.error("Polling error:",c)}}addListener(c,h){this.listeners.set(c,h)}removeListener(c){this.listeners.delete(c)}disconnect(){this.pollingInterval&&(clearInterval(this.pollingInterval),this.pollingInterval=null),this.isConnected.value=!1}destroy(){this.disconnect(),this.listeners.clear()}}const S=new j,K=O("media",()=>{const o=I(w()),c=I("game"),h=I(""),g=I([]),m=I(!1),l=I(null);function w(){try{const e=localStorage.getItem("authToken"),t=localStorage.getItem("currentUser");if(!e||!t){const r=localStorage.getItem("mediaData");return r?JSON.parse(r):[]}return[]}catch(e){return console.error("Failed to load media from storage:",e),[]}}function f(){try{const e=localStorage.getItem("authToken"),t=localStorage.getItem("currentUser");(!e||!t)&&localStorage.setItem("mediaData",JSON.stringify(o.value))}catch(e){console.error("Failed to save media to storage:",e)}}const M=y(()=>o.value.length),E=y(()=>{const e={};return o.value.forEach(t=>{const r=t.category||"unknown";e[r]=(e[r]||0)+1}),e}),U=y(()=>{let e=[...o.value];if(c.value&&c.value!=="all"&&(e=e.filter(t=>c.value==="watchlist"?t.category==="watchlist"||t.isNew===!0:t.category===c.value)),h.value){const t=h.value.toLowerCase();e=e.filter(r=>{var a,s,u,n;return((a=r.title)==null?void 0:a.toLowerCase().includes(t))||((s=r.description)==null?void 0:s.toLowerCase().includes(t))||((u=r.genre)==null?void 0:u.toLowerCase().includes(t))||((n=r.platforms)==null?void 0:n.toLowerCase().includes(t))})}return g.value.forEach(t=>{t.type==="platform"?e=e.filter(r=>{var a;return(a=r.platforms)==null?void 0:a.toLowerCase().includes(t.value.toLowerCase())}):t.type==="genre"?e=e.filter(r=>{var a;return(a=r.genre)==null?void 0:a.toLowerCase().includes(t.value.toLowerCase())}):t.type==="airing"&&(t.value==="airing"?e=e.filter(r=>r.isAiring===!0):t.value==="finished"&&(e=e.filter(r=>r.isAiring===!1||r.isAiring===null)))}),e});async function p(){var e,t;m.value=!0,l.value=null;try{const r=localStorage.getItem("authToken"),a=localStorage.getItem("currentUser");if(r&&a)try{const s=await v.getMedia();o.value=s||[]}catch(s){console.warn("API load failed for logged in user:",s),o.value=[]}else{const s=w();if(s.length>0)o.value=s;else{const u=await v.getMedia();o.value=u||[],f()}}}catch(r){l.value=((t=(e=r.response)==null?void 0:e.data)==null?void 0:t.message)||r.message||"Failed to load media data",console.error("Failed to load media:",r)}finally{m.value=!1}}function x(e){c.value=e}function F(e){h.value=e}function T(e){g.value.some(r=>r.type===e.type&&r.value===e.value)||g.value.push(e)}function C(e){g.value=g.value.filter(t=>!(t.type===e.type&&t.value===e.value))}function A(){g.value=[]}async function L(e){var t,r,a;try{const s=localStorage.getItem("authToken"),u=localStorage.getItem("currentUser");if(s&&u)try{const n=await v.addMediaItem(e);return await p(),n}catch(n){if(console.error("API save failed for logged in user:",n),((t=n.response)==null?void 0:t.status)===409){const i=((a=(r=n.response)==null?void 0:r.data)==null?void 0:a.error)||"Ein Eintrag mit diesem Titel und dieser Kategorie existiert bereits.";throw l.value=i,new Error(i)}throw n}else{const n={id:Date.now(),...e,__order:o.value.length};return o.value.push(n),f(),n}}catch(s){throw l.value||(l.value=s.message||"Failed to add media item"),s}}async function b(e,t){var r,a,s;try{const u=localStorage.getItem("authToken"),n=localStorage.getItem("currentUser");if(u&&n)try{const i=await v.updateMediaItem(e,t);return await p(),i}catch(i){if(console.error("API update failed for logged in user:",i),((r=i.response)==null?void 0:r.status)===409){const d=((s=(a=i.response)==null?void 0:a.data)==null?void 0:s.error)||"Ein Eintrag mit diesem Titel und dieser Kategorie existiert bereits.";throw l.value=d,new Error(d)}throw i}else{const i=o.value.findIndex(d=>d.id===e);if(i!==-1)return o.value[i]={...o.value[i],...t},f(),o.value[i];throw new Error("Media item not found")}}catch(u){throw l.value||(l.value=u.message||"Failed to update media item"),u}}async function D(e){try{const t=localStorage.getItem("authToken"),r=localStorage.getItem("currentUser");if(t&&r)try{return await v.deleteMediaItem(e),await p(),!0}catch(a){throw console.error("API delete failed for logged in user:",a),a}else{const a=o.value.findIndex(s=>s.id===e);if(a!==-1)return o.value.splice(a,1),f(),!0;throw new Error("Media item not found")}}catch(t){throw l.value=t.message||"Failed to delete media item",t}}async function P(e){var t,r,a;try{const s=localStorage.getItem("authToken"),u=localStorage.getItem("currentUser");if(s&&u)try{const n=await v.batchAddMediaItems(e);return await p(),n}catch(n){if(console.error("API batch add failed for logged in user:",n),((t=n.response)==null?void 0:t.status)===400&&((a=(r=n.response)==null?void 0:r.data)!=null&&a.errors)){const i=n.response.data.errors.filter(d=>d.error&&d.error.includes("existiert bereits"));if(i.length>0){const d=`${i.length} Einträge konnten nicht hinzugefügt werden, da sie bereits existieren.`;throw l.value=d,new Error(d)}}throw n}else{const n=e.map((i,d)=>({id:Date.now()+d,...i,__order:o.value.length+d}));return o.value.push(...n),f(),{success:!0,stats:{created:n.length,failed:0,errors:[]}}}}catch(s){throw l.value||(l.value=s.message||"Failed to add media items"),s}}async function _(e){try{const t=localStorage.getItem("authToken"),r=localStorage.getItem("currentUser");if(t&&r)try{return await v.batchDeleteMediaItems(e),await p(),!0}catch(a){throw console.error("API batch delete failed for logged in user:",a),a}else return o.value=o.value.filter(a=>!e.includes(a.id)),f(),!0}catch(t){throw l.value=t.message||"Failed to delete media items",t}}async function z(){try{const e=localStorage.getItem("authToken"),t=localStorage.getItem("currentUser");e&&t?await v.saveMedia(o.value):f()}catch(e){console.error("Failed to save media:",e)}}function k(){l.value=null}function $(e){if(console.log("Processing real-time update:",e),e.type==="media_updated"&&e.items)e.items.forEach(t=>{const r=o.value.findIndex(a=>a.id===t.id);r!==-1?o.value[r]={...o.value[r],...t}:o.value.push(t)});else if(e.action==="created"||e.action==="updated"){const t=e.item,r=o.value.findIndex(a=>a.id===t.id);r!==-1?o.value[r]={...o.value[r],...t}:o.value.push(t)}else if(e.action==="deleted"){const t=o.value.findIndex(r=>r.id===e.id);t!==-1&&o.value.splice(t,1)}f()}function R(){const e=localStorage.getItem("authToken"),t=localStorage.getItem("currentUser");if(!e||!t){console.log("Skipping realtime initialization - user not authenticated");return}try{S.addListener("media-store",$),S.connect()}catch(r){console.error("Failed to initialize realtime updates:",r)}}function N(){S.removeListener("media-store")}return{mediaData:o,currentCategory:c,searchQuery:h,activeFilters:g,loading:m,error:l,totalItems:M,categoryCounts:E,filteredMedia:U,loadMedia:p,setCategory:x,setSearchQuery:F,addFilter:T,removeFilter:C,clearFilters:A,addMediaItem:L,updateMediaItem:b,deleteMediaItem:D,batchAddMediaItems:P,batchDeleteMediaItems:_,saveMedia:z,clearError:k,initializeRealtimeUpdates:R,cleanupRealtimeUpdates:N}});export{K as u};
