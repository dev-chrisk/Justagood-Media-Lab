import{d as j,r as h,c as v,q as f}from"./index-CjBXyH3Y.js";class q{constructor(){this.isConnected={value:!1},this.listeners=new Map,this.pollingInterval=null,this.lastUpdate=null,this.pollingIntervalMs=2e4}connect(){if(this.pollingInterval)return;const l=localStorage.getItem("authToken"),u=localStorage.getItem("currentUser");if(!l||!u){console.log("Skipping realtime connection - user not authenticated");return}this.isConnected.value=!0,this.lastUpdate=new Date,this.pollingInterval=setInterval(()=>{this.checkForUpdates()},this.pollingIntervalMs)}async checkForUpdates(){try{const l=localStorage.getItem("authToken"),u=localStorage.getItem("currentUser");if(!l||!u)return;const i=await fetch("https://teabubble.attrebi.ch/api/media",{headers:{Authorization:`Bearer ${l}`,"Content-Type":"application/json"}});if(!i.ok){if(i.status===401){this.disconnect();return}throw new Error(`HTTP error! status: ${i.status}`)}const g=await i.json();g&&g.length>0&&this.listeners.forEach((c,p)=>{try{c({type:"media_updated",items:g,count:g.length,timestamp:new Date().toISOString()})}catch(d){console.error(`Error in listener ${p}:`,d)}}),this.lastUpdate=new Date}catch{}}addListener(l,u){this.listeners.set(l,u)}removeListener(l){this.listeners.delete(l)}disconnect(){this.pollingInterval&&(clearInterval(this.pollingInterval),this.pollingInterval=null),this.isConnected.value=!1}destroy(){this.disconnect(),this.listeners.clear()}}const w=new q,Q=j("media",()=>{const o=h(p()),l=h("game"),u=h(""),i=h([]),g=h(!1),c=h(null);function p(){try{const e=localStorage.getItem("authToken"),t=localStorage.getItem("currentUser");if(!e||!t){const a=localStorage.getItem("mediaData");return a?JSON.parse(a):[]}return[]}catch(e){return console.error("Failed to load media from storage:",e),[]}}function d(){try{const e=localStorage.getItem("authToken"),t=localStorage.getItem("currentUser");(!e||!t)&&localStorage.setItem("mediaData",JSON.stringify(o.value))}catch(e){console.error("Failed to save media to storage:",e)}}const S=v(()=>o.value.length),k=v(()=>{const e={};return o.value.forEach(t=>{const a=t.category||"unknown";e[a]=(e[a]||0)+1}),e}),M=v(()=>{let e=[...o.value];if(l.value&&l.value!=="all"&&(e=e.filter(t=>l.value==="watchlist"?t.category==="watchlist"||t.isNew===!0:t.category===l.value)),u.value){const t=u.value.toLowerCase();e=e.filter(a=>{var r,n,s,I;return((r=a.title)==null?void 0:r.toLowerCase().includes(t))||((n=a.description)==null?void 0:n.toLowerCase().includes(t))||((s=a.genre)==null?void 0:s.toLowerCase().includes(t))||((I=a.platforms)==null?void 0:I.toLowerCase().includes(t))})}return i.value.forEach(t=>{t.type==="platform"?e=e.filter(a=>{var r;return(r=a.platforms)==null?void 0:r.toLowerCase().includes(t.value.toLowerCase())}):t.type==="genre"?e=e.filter(a=>{var r;return(r=a.genre)==null?void 0:r.toLowerCase().includes(t.value.toLowerCase())}):t.type==="airing"&&(t.value==="airing"?e=e.filter(a=>a.isAiring===!0):t.value==="finished"&&(e=e.filter(a=>a.isAiring===!1||a.isAiring===null)))}),e}),U=v(()=>{const e=new Set;return o.value.forEach(t=>{t.platforms&&t.platforms.split(/[,;|&]/).map(r=>r.trim()).filter(r=>r.length>0).forEach(r=>e.add(r))}),Array.from(e).sort()}),E=v(()=>{const e=new Set;return o.value.forEach(t=>{t.genre&&t.genre.split(/[,;|&]/).map(r=>r.trim()).filter(r=>r.length>0).forEach(r=>e.add(r))}),Array.from(e).sort()});async function m(){var e,t;g.value=!0,c.value=null;try{const a=localStorage.getItem("authToken"),r=localStorage.getItem("currentUser");if(a&&r)try{const n=await f.getMedia();o.value=n||[],console.log(`📊 Loaded ${o.value.length} media items from API`)}catch(n){console.warn("API load failed for logged in user:",n),o.value=[]}else{const n=p();if(n.length>0)o.value=n;else{const s=await f.getMedia();o.value=s||[],d()}}}catch(a){c.value=((t=(e=a.response)==null?void 0:e.data)==null?void 0:t.message)||a.message||"Failed to load media data",console.error("Failed to load media:",a)}finally{g.value=!1}}function F(e){l.value=e}function L(e){u.value=e}function T(e){i.value.some(a=>a.type===e.type&&a.value===e.value)||i.value.push(e)}function x(e){i.value=i.value.filter(t=>!(t.type===e.type&&t.value===e.value))}function A(){i.value=[]}function C(){const e=localStorage.getItem("authToken"),t=localStorage.getItem("currentUser");e&&t&&console.log("🔍 Data Sync Check:",{localItems:o.value.length,localIds:o.value.map(a=>a.id),user:t,hasToken:!!e})}async function D(e){try{const t=localStorage.getItem("authToken"),a=localStorage.getItem("currentUser");if(t&&a)try{const r=await f.addMediaItem(e);return await m(),r}catch(r){throw console.error("API save failed for logged in user:",r),r}else{const r={id:Date.now(),...e,__order:o.value.length};return o.value.push(r),d(),r}}catch(t){throw c.value=t.message||"Failed to add media item",t}}async function b(e,t){try{const a=localStorage.getItem("authToken"),r=localStorage.getItem("currentUser");if(a&&r)try{const n=await f.updateMediaItem(e,t);return await m(),n}catch(n){throw console.error("API update failed for logged in user:",n),n}else{const n=o.value.findIndex(s=>s.id===e);if(n!==-1)return o.value[n]={...o.value[n],...t},d(),o.value[n];throw new Error("Media item not found")}}catch(a){throw c.value=a.message||"Failed to update media item",a}}async function P(e){var t;try{const a=localStorage.getItem("authToken"),r=localStorage.getItem("currentUser");if(a&&r)try{return o.value.find(s=>s.id===e)||console.log(`ℹ️ Media item with ID ${e} not found in local data, attempting API delete anyway`),await f.deleteMediaItem(e),await m(),!0}catch(n){if(((t=n.response)==null?void 0:t.status)===404){const s=o.value.findIndex(I=>I.id===e);return s!==-1&&(o.value.splice(s,1),console.log(`✅ Removed non-existent item ${e} from local data`)),!0}throw console.error("API delete failed for logged in user:",n),n}else{const n=o.value.findIndex(s=>s.id===e);if(n!==-1)return o.value.splice(n,1),d(),!0;throw new Error("Media item not found")}}catch(a){throw c.value=a.message||"Failed to delete media item",a}}async function $(e){try{const t=localStorage.getItem("authToken"),a=localStorage.getItem("currentUser");if(t&&a)try{const r=await f.batchAddMediaItems(e);return await m(),r}catch(r){throw console.error("API batch add failed for logged in user:",r),r}else{const r=e.map((n,s)=>({id:Date.now()+s,...n,__order:o.value.length+s}));return o.value.push(...r),d(),{success:!0,stats:{created:r.length,failed:0,errors:[]}}}}catch(t){throw c.value=t.message||"Failed to add media items",t}}async function _(e){try{const t=localStorage.getItem("authToken"),a=localStorage.getItem("currentUser");if(t&&a)try{return await f.batchDeleteMediaItems(e),await m(),!0}catch(r){throw console.error("API batch delete failed for logged in user:",r),r}else return o.value=o.value.filter(r=>!e.includes(r.id)),d(),!0}catch(t){throw c.value=t.message||"Failed to delete media items",t}}async function R(){try{const e=localStorage.getItem("authToken"),t=localStorage.getItem("currentUser");e&&t?await f.saveMedia(o.value):d()}catch(e){console.error("Failed to save media:",e)}}function y(){c.value=null}function z(e){if(console.log("Processing real-time update:",e),e.type==="media_updated"&&e.items)e.items.forEach(t=>{const a=o.value.findIndex(r=>r.id===t.id);a!==-1?o.value[a]={...o.value[a],...t}:o.value.push(t)});else if(e.action==="created"||e.action==="updated"){const t=e.item,a=o.value.findIndex(r=>r.id===t.id);a!==-1?o.value[a]={...o.value[a],...t}:o.value.push(t)}else if(e.action==="deleted"){const t=o.value.findIndex(a=>a.id===e.id);t!==-1&&o.value.splice(t,1)}d()}function N(){const e=localStorage.getItem("authToken"),t=localStorage.getItem("currentUser");if(!e||!t){console.log("Skipping realtime initialization - user not authenticated");return}try{w.addListener("media-store",z),w.connect()}catch(a){console.error("Failed to initialize realtime updates:",a)}}function O(){w.removeListener("media-store")}return{mediaData:o,currentCategory:l,searchQuery:u,activeFilters:i,loading:g,error:c,totalItems:S,categoryCounts:k,filteredMedia:M,platforms:U,genres:E,loadMedia:m,setCategory:F,setSearchQuery:L,addFilter:T,removeFilter:x,clearFilters:A,addMediaItem:D,updateMediaItem:b,deleteMediaItem:P,batchAddMediaItems:$,batchDeleteMediaItems:_,saveMedia:R,clearError:y,validateDataSync:C,initializeRealtimeUpdates:N,cleanupRealtimeUpdates:O}});export{Q as u};
